/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package code;

import code.admin.Supplier;
import code.database.Database;
import java.awt.*;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author user
 */
public class reviews extends javax.swing.JFrame {

    /**
     * Creates new form reviews
     */
    public reviews() {
        initComponents();
        layoutConfig();
        loadReviews();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlReviews = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        pnlReviews.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout pnlReviewsLayout = new javax.swing.GroupLayout(pnlReviews);
        pnlReviews.setLayout(pnlReviewsLayout);
        pnlReviewsLayout.setHorizontalGroup(
            pnlReviewsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 599, Short.MAX_VALUE)
        );
        pnlReviewsLayout.setVerticalGroup(
            pnlReviewsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 419, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel1.setText("Reseñas");

        btnBack.setText("Regresar");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(95, 95, 95)
                        .addComponent(btnBack))
                    .addComponent(pnlReviews, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnBack))
                .addGap(18, 18, 18)
                .addComponent(pnlReviews, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        dispose();
        try {
            new code.view().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Supplier.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reviews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reviews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reviews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reviews.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new reviews().setVisible(true);
            }
        });
    }

    private void layoutConfig() {
        pnlReviews.setLayout(new BoxLayout(pnlReviews, BoxLayout.Y_AXIS));

        //Grid
        //pnlReviews.setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = GridBagConstraints.RELATIVE; // Incrementar automáticamente en cada fila
        gbc.insets = new Insets(10, 5, 10, 5); // Margen: superior, izquierda, inferior, derecha
        gbc.fill = GridBagConstraints.HORIZONTAL; // Ajustar al ancho disponible
        gbc.anchor = GridBagConstraints.CENTER; // Centrar horizontalmente
    }

    private JPanel createReviewCard(String title, String author, int rating, String comment, String date) {
        JPanel card = new JPanel();
        card.setLayout(new BorderLayout());
        card.setBorder(BorderFactory.createLineBorder(Color.GRAY, 1));
        card.setBackground(Color.WHITE);
        card.setPreferredSize(new Dimension(400, 150)); // Tamaño ajustable

        // Etiqueta del título
        JLabel lblTitle = new JLabel(title + " - " + author);
        lblTitle.setFont(new Font("Arial", Font.BOLD, 14));
        lblTitle.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));

        // Etiqueta de la calificación
        JLabel lblRating = new JLabel(+rating + "/10");
        lblRating.setFont(new Font("Arial", Font.PLAIN, 12));
        lblRating.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));

        // Área de texto para el comentario
        JTextArea txtComment = new JTextArea(comment);
        txtComment.setFont(new Font("Arial", Font.PLAIN, 12));
        txtComment.setLineWrap(true);
        txtComment.setWrapStyleWord(true);
        txtComment.setEditable(false);
        txtComment.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));

        // Etiqueta de la fecha
        JLabel lblDate = new JLabel(date);
        lblDate.setFont(new Font("Arial", Font.ITALIC, 10));
        lblDate.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));

        // Panel inferior para la calificación y la fecha
        JPanel bottomPanel = new JPanel(new BorderLayout());
        bottomPanel.add(lblRating, BorderLayout.WEST);
        bottomPanel.add(lblDate, BorderLayout.EAST);

        // Añadir los componentes al panel principal
        card.add(lblTitle, BorderLayout.NORTH);
        card.add(new JScrollPane(txtComment), BorderLayout.CENTER);
        card.add(bottomPanel, BorderLayout.SOUTH);

        return card;
    }

    private void loadReviews() {
        // Limpiar el contenedor de reseñas
        pnlReviews.removeAll();
        pnlReviews.revalidate();
        pnlReviews.repaint();

        Database db = new Database();

        // Consulta para obtener las reseñas
        ResultSet rs = db.executeQuery(
                "SELECT r.id, r.comment, r.rating, r.review_date, b.title, b.author "
                + "FROM Review r "
                + "JOIN Book b ON r.book_id = b.id ",
                 new String[0] // Usar el ID del usuario logueado
        );

        try {
            while (rs != null && rs.next()) {
                JPanel reviewCard = createReviewCard(
                        rs.getString("title"),
                        rs.getString("author"),
                        rs.getInt("rating"),
                        rs.getString("comment"),
                        rs.getString("review_date")
                );
                pnlReviews.add(Box.createVerticalStrut(15)); // Espacio vertical de 10 píxeles
                pnlReviews.add(reviewCard);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al cargar las reseñas: " + e.getMessage());
        }

        // Actualizar el contenedor
        pnlReviews.revalidate();
        pnlReviews.repaint();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel pnlReviews;
    // End of variables declaration//GEN-END:variables
}
